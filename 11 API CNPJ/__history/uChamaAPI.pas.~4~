unit uChamaAPI;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Forms,  uInformacaoEmpresa, Data.DB, Datasnap.DBClient, Vcl.Controls, IdSSLOpenSSL,
   Data.SqlExpr, Vcl.Dialogs, IdHTTP;

type
  TChamaAPI = class
    public
      class function RetornaValorAPIBrasil(Inscricao: String): TInformacaoEmpresa;
      class function RetornaValorAPIWS(Inscricao: String): TInformacaoEmpresa;
    private
  end;

implementation

uses Lib.BRASILAPI, Lib.RECEITAWS;

const
  C_URL_BRASILAPI = 'https://brasilapi.com.br/api/cnpj/v1/';
  C_URL_RECEITAWS = 'https://receitaws.com.br/v1/cnpj/';

{ TChamaAPI }


class function TChamaAPI.RetornaValorAPIBrasil(Inscricao: String): TInformacaoEmpresa;
var
   HTTP : TIdHTTP;
   lResponse: TStringStream;
   mURL: String;
   BRASILAPI: TBRASILAPI;
   RECEITAWS: TRECEITAWS;
begin
   result    := TInformacaoEmpresa.Create;
   BRASILAPI := TBRASILAPI.Create;
//   RECEITAWS := TRECEITAWS.Create;


   HTTP      := TIdHTTP.Create(NIL);
   lResponse := TStringStream.Create('', TEncoding.UTF8);

   try
      try
         HTTP.Request.CustomHeaders.Clear;
         HTTP.Request.CustomHeaders.Add('User-Agent: MyUserAgent');
         HTTP.Request.CustomHeaders.Add('Content-Type: application/json');
         HTTP.Request.CustomHeaders.Add('Accept: application/json');

         HTTP.IOHandler := TIdSSLIOHandlerSocketOpenSSL.Create(nil);
         TIdSSLIOHandlerSocketOpenSSL(HTTP.IOHandler).SSLOptions.Method := sslvTLSv1_2;

         HTTP.Get(C_URL_BRASILAPI + Inscricao, lResponse);
      except on E: Exception do

      end;



      BRASILAPI.AsJson := '';
      if HTTP.ResponseCode = 200 then
         BRASILAPI.AsJson := lResponse.DataString;

      Result.Razao := BRASILAPI.RazaoSocial;

   finally
      HTTP.Free;
      lResponse.Free;
   end;
end;

class function TChamaAPI.RetornaValorAPIWS(Inscricao: String): TInformacaoEmpresa;
begin

end;

end.
